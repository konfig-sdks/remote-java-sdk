/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ContractAmendmentAutomatableResponse;
import com.konfigthis.client.model.ContractAmendmentFormResponse;
import com.konfigthis.client.model.ContractAmendmentResponse;
import com.konfigthis.client.model.ContractAmendmentSchemaParams;
import com.konfigthis.client.model.CreateContractAmendmentParams;
import com.konfigthis.client.model.ListContractAmendmentResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractAmendmentsApi
 */
@Disabled
public class ContractAmendmentsApiTest {

    private static ContractAmendmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContractAmendmentsApi(apiClient);
    }

    /**
     * Approve Contract Amendment in the Sandbox Environment
     *
     * Approves a contract amendment request without the intervention of a Remote admin. Approvals done via this endpoint are effective immediately, regardless of the effective date entered on the contract amendment creation.  This endpoint is only available in Sandbox, otherwise it will respond with a 404. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveAmendmentTest() throws ApiException {
        String contractAmendmentRequestId = null;
        ContractAmendmentResponse response = api.approveAmendment(contractAmendmentRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Automatable Contract Amendment
     *
     * Check if a contract amendment request is automatable. If the contract amendment request is automatable, then after submission, it will instantly amend the employee&#39;s contract and send them an updated document.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Contract Amendments](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkAutomatabilityTest() throws ApiException {
        String amendmentContractId = null;
        Object contractAmendment = null;
        String employmentId = null;
        ContractAmendmentAutomatableResponse response = api.checkAutomatability(amendmentContractId, contractAmendment, employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create Contract Amendment
     *
     * Creates a Contract Amendment request.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Contract Amendments](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRequestTest() throws ApiException {
        String amendmentContractId = null;
        Object contractAmendment = null;
        String employmentId = null;
        ContractAmendmentResponse response = api.createRequest(amendmentContractId, contractAmendment, employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Show form schema
     *
     * Returns the json schema of the &#x60;contract_amendment&#x60; form. This endpoint requires a company access token, as forms are dependent on certain properties of companies and their current employments. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFormSchemaTest() throws ApiException {
        String countryCode = null;
        String employmentId = null;
        String form = null;
        ContractAmendmentFormResponse response = api.getFormSchema(countryCode, employmentId)
                .form(form)
                .execute();
        // TODO: test validations
    }

    /**
     * List Contract Amendment
     *
     * List Contract Amendment requests.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRequestsTest() throws ApiException {
        ListContractAmendmentResponse response = api.listRequests()
                .execute();
        // TODO: test validations
    }

    /**
     * Show Contract Amendment
     *
     * Show a single Contract Amendment request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showSingleRequestTest() throws ApiException {
        String id = null;
        ContractAmendmentResponse response = api.showSingleRequest(id)
                .execute();
        // TODO: test validations
    }

}
