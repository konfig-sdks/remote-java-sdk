/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CostCalculatorEmploymentParam;
import com.konfigthis.client.model.CostCalculatorEstimatePDFResponse;
import com.konfigthis.client.model.CostCalculatorEstimateParams;
import com.konfigthis.client.model.CostCalculatorEstimateResponse;
import com.konfigthis.client.model.CostCalculatorListCountryResponse;
import com.konfigthis.client.model.JSONSchemaResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CostCalculatorApi
 */
@Disabled
public class CostCalculatorApiTest {

    private static CostCalculatorApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CostCalculatorApi(apiClient);
    }

    /**
     * Creates a cost estimation of employments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmploymentEstimationTest() throws ApiException {
        String employerCurrencySlug = null;
        List<CostCalculatorEmploymentParam> employments = null;
        Boolean includeBenefits = null;
        Boolean includeCostBreakdowns = null;
        CostCalculatorEstimateResponse response = api.createEmploymentEstimation(employerCurrencySlug, employments)
                .includeBenefits(includeBenefits)
                .includeCostBreakdowns(includeCostBreakdowns)
                .execute();
        // TODO: test validations
    }

    /**
     * Creates a cost estimation of employments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateEstimationPdfTest() throws ApiException {
        String employerCurrencySlug = null;
        List<CostCalculatorEmploymentParam> employments = null;
        Boolean includeBenefits = null;
        Boolean includeCostBreakdowns = null;
        CostCalculatorEstimatePDFResponse response = api.generateEstimationPdf(employerCurrencySlug, employments)
                .includeBenefits(includeBenefits)
                .includeCostBreakdowns(includeCostBreakdowns)
                .execute();
        // TODO: test validations
    }

    /**
     * List countries
     *
     * Lists active and processing countries
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCountriesTest() throws ApiException {
        CostCalculatorListCountryResponse response = api.listCountries()
                .execute();
        // TODO: test validations
    }

    /**
     * Show region fields
     *
     * Returns required fields JSON Schema for a given region. These are required in order to calculate       the cost of employment for the region. These fields are based on employer contributions that are associated       with the region or any of it&#39;s parent regions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showRegionFieldsTest() throws ApiException {
        String slug = null;
        JSONSchemaResponse response = api.showRegionFields(slug)
                .execute();
        // TODO: test validations
    }

}
