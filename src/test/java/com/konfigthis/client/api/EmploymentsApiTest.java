/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CompleteOnboarding;
import com.konfigthis.client.model.EmploymentCreationResponse;
import com.konfigthis.client.model.EmploymentResponse;
import com.konfigthis.client.model.ListEmploymentsResponse;
import com.konfigthis.client.model.SuccessResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmploymentsApi
 */
@Disabled
public class EmploymentsApiTest {

    private static EmploymentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmploymentsApi(apiClient);
    }

    /**
     * Complete onboarding
     *
     * Completes the employee onboarding. When all tasks are completed, the employee is marked as in &#x60;review&#x60; status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void completeOnboardingTest() throws ApiException {
        String employmentId = null;
        EmploymentResponse response = api.completeOnboarding()
                .employmentId(employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create employment
     *
     * Creates an employment. We support creating employees and contractors.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Countries](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmploymentTest() throws ApiException {
        EmploymentCreationResponse response = api.createEmployment()
                .execute();
        // TODO: test validations
    }

    /**
     * Show employment
     *
     * Shows all the information of an employment.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Countries](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmploymentInfoTest() throws ApiException {
        String employmentId = null;
        EmploymentResponse response = api.getEmploymentInfo(employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Invite employment
     *
     * Invite an employment to start the self-enrollment.  Requirements for the invitation to succeed:  * Employment needs to have the following JSON Schema forms filled: &#x60;contract_details&#x60; and &#x60;pricing_plan_details&#x60; * &#x60;provisional_start_date&#x60; must consider the minimum onbaording time of the employment&#39;s country  If there are validations errors, they are returned with a Conflict HTTP Status (409) and a descriptive message. HTTP Status OK (200) is returned in case of success. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inviteStartEnrollmentTest() throws ApiException {
        String employmentId = null;
        SuccessResponse response = api.inviteStartEnrollment(employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * List employments
     *
     * Lists all employments, except for the deleted ones.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Countries](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        String companyId = null;
        String email = null;
        String status = null;
        Integer page = null;
        Integer pageSize = null;
        ListEmploymentsResponse response = api.listAll()
                .companyId(companyId)
                .email(email)
                .status(status)
                .page(page)
                .pageSize(pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Update employment
     *
     * Updates an employment.  **For &#x60;created&#x60; employments:** You can change all basic params and onboarding tasks or perform a per onboarding task update. You can also update basic_information.  **For &#x60;active&#x60; employments:** You can update the manager (&#x60;manager_id&#x60; field), emergency_contact_details and address_details.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Countries](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.   #### Automatically inviting an employee  When you submit the &#x60;contract_details&#x60; and &#x60;pricing_plan_details&#x60;, Remote should have all the required data to automatically send an invite to the employee. You can tell if an automatic invite has been sent by looking at the &#x60;employment_lifecycle_stage&#x60; field value. If its value is &#x60;employee_self_enrollment&#x60;, it means the employee has received an email to join the Remote platform at their &#x60;personal_email&#x60;.  After an automatic invite is sent to an employee, **you will not be able to update employment data through the Remote API**. After onboarding, only a limited set of employment data will be available for updates, such as &#x60;emergency_contact_details&#x60;. If you want to provide additional information for an employment, please make sure to do so **before** the employee is invited. We block updates to some employment data because employees need to agree to amendments in certain cases, such as when there are changes to their contract_details. Currently, these amendments can only be done through the Remote UI.  Please contact Remote if you need to update contractors via API since it&#39;s currently not supported. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDataTest() throws ApiException {
        String employmentId = null;
        EmploymentResponse response = api.updateData(employmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update employment
     *
     * Updates an employment.  **For &#x60;created&#x60; employments:** You can change all basic params and onboarding tasks or perform a per onboarding task update. You can also update basic_information.  **For &#x60;active&#x60; employments:** You can update the manager (&#x60;manager_id&#x60; field), emergency_contact_details and address_details.  This endpoint requires and returns country-specific data. The exact required and returned fields will vary depending on which country the employment is in. To see the list of parameters for each country, see the **Show form schema** endpoint under the [Countries](https://gateway.remote.com/v1/docs/openapi.html) category.  Please note that the compliance requirements for each country are subject to change according to local laws. Given its continual updates, using Remote&#39;s [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) should be considered in order to avoid compliance issues and to have the latest version of a country requirements.  If you are using this endpoint to build an integration, make sure you are dynamically collecting or displaying the latest parameters for each country by querying the _\&quot;Show form schema\&quot;_ endpoint.  For more information on JSON Schemas, see the **How JSON Schemas work** documentation.  To learn how you can dynamically generate forms to display in your UI, see the documentation for the [json-schema-form](https://remote.com/resources/api/how-json-schemas-work) tool.   #### Automatically inviting an employee  When you submit the &#x60;contract_details&#x60; and &#x60;pricing_plan_details&#x60;, Remote should have all the required data to automatically send an invite to the employee. You can tell if an automatic invite has been sent by looking at the &#x60;employment_lifecycle_stage&#x60; field value. If its value is &#x60;employee_self_enrollment&#x60;, it means the employee has received an email to join the Remote platform at their &#x60;personal_email&#x60;.  After an automatic invite is sent to an employee, **you will not be able to update employment data through the Remote API**. After onboarding, only a limited set of employment data will be available for updates, such as &#x60;emergency_contact_details&#x60;. If you want to provide additional information for an employment, please make sure to do so **before** the employee is invited. We block updates to some employment data because employees need to agree to amendments in certain cases, such as when there are changes to their contract_details. Currently, these amendments can only be done through the Remote UI.  Please contact Remote if you need to update contractors via API since it&#39;s currently not supported. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDetailsTest() throws ApiException {
        String employmentId = null;
        EmploymentResponse response = api.updateDetails(employmentId)
                .execute();
        // TODO: test validations
    }

}
