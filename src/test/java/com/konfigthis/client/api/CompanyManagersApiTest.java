/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CompanyManagerData;
import com.konfigthis.client.model.CompanyManagerParams;
import com.konfigthis.client.model.CompanyManagerResponse;
import com.konfigthis.client.model.CompanyManagersResponse;
import com.konfigthis.client.model.SuccessResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CompanyManagersApi
 */
@Disabled
public class CompanyManagersApiTest {

    private static CompanyManagersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CompanyManagersApi(apiClient);
    }

    /**
     * Create and invite a Company Manager
     *
     * Create a Company Manager and sends the invitation email for signing in to the Remote Platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInviteTest() throws ApiException {
        String email = null;
        String name = null;
        String role = null;
        String companyId = null;
        CompanyManagerData response = api.createInvite(email, name, role)
                .companyId(companyId)
                .execute();
        // TODO: test validations
    }

    /**
     * Deletes a Company Manager user
     *
     * Deletes a Company Manager user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String userId = null;
        SuccessResponse response = api.deleteUser(userId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Company Managers
     *
     * List all company managers of an integration. If filtered by the company_id param, it lists only company managers belonging to the specified company. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagersTest() throws ApiException {
        String companyId = null;
        Integer page = null;
        Integer pageSize = null;
        CompanyManagersResponse response = api.listManagers()
                .companyId(companyId)
                .page(page)
                .pageSize(pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Show company manager user
     *
     * Shows a single company manager user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showUserTest() throws ApiException {
        String userId = null;
        CompanyManagerResponse response = api.showUser(userId)
                .execute();
        // TODO: test validations
    }

}
