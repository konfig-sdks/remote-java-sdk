/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Country;
import com.konfigthis.client.model.PricingPlanDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FullParams
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FullParams {
  public static final String SERIALIZED_NAME_ADDRESS_DETAILS = "address_details";
  @SerializedName(SERIALIZED_NAME_ADDRESS_DETAILS)
  private Object addressDetails;

  public static final String SERIALIZED_NAME_ADMINISTRATIVE_DETAILS = "administrative_details";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATIVE_DETAILS)
  private Object administrativeDetails;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_DETAILS = "bank_account_details";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_DETAILS)
  private Object bankAccountDetails;

  public static final String SERIALIZED_NAME_BASIC_INFORMATION = "basic_information";
  @SerializedName(SERIALIZED_NAME_BASIC_INFORMATION)
  private Object basicInformation;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS_DETAILS = "billing_address_details";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS_DETAILS)
  private Object billingAddressDetails;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CONTRACT_DETAILS = "contract_details";
  @SerializedName(SERIALIZED_NAME_CONTRACT_DETAILS)
  private Object contractDetails;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private Country country;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "department_id";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private String departmentId;

  public static final String SERIALIZED_NAME_EMERGENCY_CONTACT_DETAILS = "emergency_contact_details";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_CONTACT_DETAILS)
  private Object emergencyContactDetails;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_JOB_TITLE = "job_title";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_MANAGER_ID = "manager_id";
  @SerializedName(SERIALIZED_NAME_MANAGER_ID)
  private String managerId;

  public static final String SERIALIZED_NAME_PERSONAL_DETAILS = "personal_details";
  @SerializedName(SERIALIZED_NAME_PERSONAL_DETAILS)
  private Object personalDetails;

  public static final String SERIALIZED_NAME_PRICING_PLAN_DETAILS = "pricing_plan_details";
  @SerializedName(SERIALIZED_NAME_PRICING_PLAN_DETAILS)
  private PricingPlanDetails pricingPlanDetails;

  public FullParams() {
  }

  public FullParams addressDetails(Object addressDetails) {
    
    
    
    
    this.addressDetails = addressDetails;
    return this;
  }

   /**
   * Home address information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;address_details&#x60; as path parameters.
   * @return addressDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Home address information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `address_details` as path parameters.")

  public Object getAddressDetails() {
    return addressDetails;
  }


  public void setAddressDetails(Object addressDetails) {
    
    
    
    this.addressDetails = addressDetails;
  }


  public FullParams administrativeDetails(Object administrativeDetails) {
    
    
    
    
    this.administrativeDetails = administrativeDetails;
    return this;
  }

   /**
   * Administrative information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;administrative_details&#x60; as path parameters.
   * @return administrativeDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Administrative information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `administrative_details` as path parameters.")

  public Object getAdministrativeDetails() {
    return administrativeDetails;
  }


  public void setAdministrativeDetails(Object administrativeDetails) {
    
    
    
    this.administrativeDetails = administrativeDetails;
  }


  public FullParams bankAccountDetails(Object bankAccountDetails) {
    
    
    
    
    this.bankAccountDetails = bankAccountDetails;
    return this;
  }

   /**
   * Bank account information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;bank_account_details&#x60; as path parameters.
   * @return bankAccountDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bank account information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `bank_account_details` as path parameters.")

  public Object getBankAccountDetails() {
    return bankAccountDetails;
  }


  public void setBankAccountDetails(Object bankAccountDetails) {
    
    
    
    this.bankAccountDetails = bankAccountDetails;
  }


  public FullParams basicInformation(Object basicInformation) {
    
    
    
    
    this.basicInformation = basicInformation;
    return this;
  }

   /**
   * Employment basic information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;employment_basic_information&#x60; as path parameters.
   * @return basicInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employment basic information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `employment_basic_information` as path parameters.")

  public Object getBasicInformation() {
    return basicInformation;
  }


  public void setBasicInformation(Object basicInformation) {
    
    
    
    this.basicInformation = basicInformation;
  }


  public FullParams billingAddressDetails(Object billingAddressDetails) {
    
    
    
    
    this.billingAddressDetails = billingAddressDetails;
    return this;
  }

   /**
   * Billing address information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;billing_address_details&#x60; as path parameters.
   * @return billingAddressDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing address information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `billing_address_details` as path parameters.")

  public Object getBillingAddressDetails() {
    return billingAddressDetails;
  }


  public void setBillingAddressDetails(Object billingAddressDetails) {
    
    
    
    this.billingAddressDetails = billingAddressDetails;
  }


  public FullParams companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public FullParams contractDetails(Object contractDetails) {
    
    
    
    
    this.contractDetails = contractDetails;
    return this;
  }

   /**
   * Contract information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;contract_details&#x60; as path parameters.
   * @return contractDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contract information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `contract_details` as path parameters.")

  public Object getContractDetails() {
    return contractDetails;
  }


  public void setContractDetails(Object contractDetails) {
    
    
    
    this.contractDetails = contractDetails;
  }


  public FullParams country(Country country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Country getCountry() {
    return country;
  }


  public void setCountry(Country country) {
    
    
    
    this.country = country;
  }


  public FullParams departmentId(String departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * The department of the employment. The department must belong to the same company as the employment. 
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The department of the employment. The department must belong to the same company as the employment. ")

  public String getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(String departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public FullParams emergencyContactDetails(Object emergencyContactDetails) {
    
    
    
    
    this.emergencyContactDetails = emergencyContactDetails;
    return this;
  }

   /**
   * Emergency contact information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;emergency_contact_details&#x60; as path parameters.
   * @return emergencyContactDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Emergency contact information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `emergency_contact_details` as path parameters.")

  public Object getEmergencyContactDetails() {
    return emergencyContactDetails;
  }


  public void setEmergencyContactDetails(Object emergencyContactDetails) {
    
    
    
    this.emergencyContactDetails = emergencyContactDetails;
  }


  public FullParams fullName(String fullName) {
    
    
    
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    
    
    
    this.fullName = fullName;
  }


  public FullParams jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public FullParams managerId(String managerId) {
    
    
    
    
    this.managerId = managerId;
    return this;
  }

   /**
   * The user id of the manager, who should have an &#x60;admin&#x60;, &#x60;owner&#x60; or &#x60;people_manager&#x60; role. You can find these users by querying the [Company Managers endpoint](https://gateway.remote.com/v1/docs/openapi.html). **Update of this field is only available for active employments.** 
   * @return managerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user id of the manager, who should have an `admin`, `owner` or `people_manager` role. You can find these users by querying the [Company Managers endpoint](https://gateway.remote.com/v1/docs/openapi.html). **Update of this field is only available for active employments.** ")

  public String getManagerId() {
    return managerId;
  }


  public void setManagerId(String managerId) {
    
    
    
    this.managerId = managerId;
  }


  public FullParams personalDetails(Object personalDetails) {
    
    
    
    
    this.personalDetails = personalDetails;
    return this;
  }

   /**
   * Personal details information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and &#x60;personal_details&#x60; as path parameters.
   * @return personalDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Personal details information. As its properties may vary depending on the country,                you must query the [Show form schema](https://gateway.remote.com/v1/docs/openapi.html) endpoint             passing the country code and `personal_details` as path parameters.")

  public Object getPersonalDetails() {
    return personalDetails;
  }


  public void setPersonalDetails(Object personalDetails) {
    
    
    
    this.personalDetails = personalDetails;
  }


  public FullParams pricingPlanDetails(PricingPlanDetails pricingPlanDetails) {
    
    
    
    
    this.pricingPlanDetails = pricingPlanDetails;
    return this;
  }

   /**
   * Get pricingPlanDetails
   * @return pricingPlanDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PricingPlanDetails getPricingPlanDetails() {
    return pricingPlanDetails;
  }


  public void setPricingPlanDetails(PricingPlanDetails pricingPlanDetails) {
    
    
    
    this.pricingPlanDetails = pricingPlanDetails;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FullParams instance itself
   */
  public FullParams putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullParams fullParams = (FullParams) o;
    return Objects.equals(this.addressDetails, fullParams.addressDetails) &&
        Objects.equals(this.administrativeDetails, fullParams.administrativeDetails) &&
        Objects.equals(this.bankAccountDetails, fullParams.bankAccountDetails) &&
        Objects.equals(this.basicInformation, fullParams.basicInformation) &&
        Objects.equals(this.billingAddressDetails, fullParams.billingAddressDetails) &&
        Objects.equals(this.companyId, fullParams.companyId) &&
        Objects.equals(this.contractDetails, fullParams.contractDetails) &&
        Objects.equals(this.country, fullParams.country) &&
        Objects.equals(this.departmentId, fullParams.departmentId) &&
        Objects.equals(this.emergencyContactDetails, fullParams.emergencyContactDetails) &&
        Objects.equals(this.fullName, fullParams.fullName) &&
        Objects.equals(this.jobTitle, fullParams.jobTitle) &&
        Objects.equals(this.managerId, fullParams.managerId) &&
        Objects.equals(this.personalDetails, fullParams.personalDetails) &&
        Objects.equals(this.pricingPlanDetails, fullParams.pricingPlanDetails)&&
        Objects.equals(this.additionalProperties, fullParams.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressDetails, administrativeDetails, bankAccountDetails, basicInformation, billingAddressDetails, companyId, contractDetails, country, departmentId, emergencyContactDetails, fullName, jobTitle, managerId, personalDetails, pricingPlanDetails, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullParams {\n");
    sb.append("    addressDetails: ").append(toIndentedString(addressDetails)).append("\n");
    sb.append("    administrativeDetails: ").append(toIndentedString(administrativeDetails)).append("\n");
    sb.append("    bankAccountDetails: ").append(toIndentedString(bankAccountDetails)).append("\n");
    sb.append("    basicInformation: ").append(toIndentedString(basicInformation)).append("\n");
    sb.append("    billingAddressDetails: ").append(toIndentedString(billingAddressDetails)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    contractDetails: ").append(toIndentedString(contractDetails)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    emergencyContactDetails: ").append(toIndentedString(emergencyContactDetails)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
    sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
    sb.append("    pricingPlanDetails: ").append(toIndentedString(pricingPlanDetails)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address_details");
    openapiFields.add("administrative_details");
    openapiFields.add("bank_account_details");
    openapiFields.add("basic_information");
    openapiFields.add("billing_address_details");
    openapiFields.add("company_id");
    openapiFields.add("contract_details");
    openapiFields.add("country");
    openapiFields.add("department_id");
    openapiFields.add("emergency_contact_details");
    openapiFields.add("full_name");
    openapiFields.add("job_title");
    openapiFields.add("manager_id");
    openapiFields.add("personal_details");
    openapiFields.add("pricing_plan_details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FullParams
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FullParams.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FullParams is not found in the empty JSON string", FullParams.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("company_id") != null && !jsonObj.get("company_id").isJsonNull()) && !jsonObj.get("company_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_id").toString()));
      }
      // validate the optional field `country`
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) {
        Country.validateJsonObject(jsonObj.getAsJsonObject("country"));
      }
      if ((jsonObj.get("department_id") != null && !jsonObj.get("department_id").isJsonNull()) && !jsonObj.get("department_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department_id").toString()));
      }
      if ((jsonObj.get("full_name") != null && !jsonObj.get("full_name").isJsonNull()) && !jsonObj.get("full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_name").toString()));
      }
      if ((jsonObj.get("job_title") != null && !jsonObj.get("job_title").isJsonNull()) && !jsonObj.get("job_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_title").toString()));
      }
      if ((jsonObj.get("manager_id") != null && !jsonObj.get("manager_id").isJsonNull()) && !jsonObj.get("manager_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manager_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manager_id").toString()));
      }
      // validate the optional field `pricing_plan_details`
      if (jsonObj.get("pricing_plan_details") != null && !jsonObj.get("pricing_plan_details").isJsonNull()) {
        PricingPlanDetails.validateJsonObject(jsonObj.getAsJsonObject("pricing_plan_details"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FullParams.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FullParams' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FullParams> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FullParams.class));

       return (TypeAdapter<T>) new TypeAdapter<FullParams>() {
           @Override
           public void write(JsonWriter out, FullParams value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FullParams read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FullParams instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FullParams given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FullParams
  * @throws IOException if the JSON string is invalid with respect to FullParams
  */
  public static FullParams fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FullParams.class);
  }

 /**
  * Convert an instance of FullParams to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

