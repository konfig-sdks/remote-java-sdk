/*
 * Remote API
 * Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements;
import com.konfigthis.client.model.ResignationAfterStartDateRequestParamsProposedLastDate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ResignationAfterStartDateRequestParams
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ResignationAfterStartDateRequestParams {
  public static final String SERIALIZED_NAME_ACCEPTS_PROPOSED_NOTICE = "accepts_proposed_notice";
  @SerializedName(SERIALIZED_NAME_ACCEPTS_PROPOSED_NOTICE)
  private Boolean acceptsProposedNotice;

  public static final String SERIALIZED_NAME_AGREES_TO_PTO_AMOUNT = "agrees_to_pto_amount";
  @SerializedName(SERIALIZED_NAME_AGREES_TO_PTO_AMOUNT)
  private Boolean agreesToPtoAmount;

  public static final String SERIALIZED_NAME_AGREES_TO_PTO_AMOUNT_NOTES = "agrees_to_pto_amount_notes";
  @SerializedName(SERIALIZED_NAME_AGREES_TO_PTO_AMOUNT_NOTES)
  private String agreesToPtoAmountNotes;

  public static final String SERIALIZED_NAME_AGREES_TO_RESIGNATION_REASON = "agrees_to_resignation_reason";
  @SerializedName(SERIALIZED_NAME_AGREES_TO_RESIGNATION_REASON)
  private Boolean agreesToResignationReason;

  public static final String SERIALIZED_NAME_AGREES_TO_RESIGNATION_REASON_NOTES = "agrees_to_resignation_reason_notes";
  @SerializedName(SERIALIZED_NAME_AGREES_TO_RESIGNATION_REASON_NOTES)
  private String agreesToResignationReasonNotes;

  public static final String SERIALIZED_NAME_HAS_ADDITIONAL_INFORMATION = "has_additional_information";
  @SerializedName(SERIALIZED_NAME_HAS_ADDITIONAL_INFORMATION)
  private Boolean hasAdditionalInformation;

  public static final String SERIALIZED_NAME_HAS_ADDITIONAL_INFORMATION_NOTES = "has_additional_information_notes";
  @SerializedName(SERIALIZED_NAME_HAS_ADDITIONAL_INFORMATION_NOTES)
  private String hasAdditionalInformationNotes;

  public static final String SERIALIZED_NAME_HAS_MORE_SALARY_INFO = "has_more_salary_info";
  @SerializedName(SERIALIZED_NAME_HAS_MORE_SALARY_INFO)
  private Boolean hasMoreSalaryInfo;

  public static final String SERIALIZED_NAME_HAS_MORE_SALARY_INFO_NOTES = "has_more_salary_info_notes";
  @SerializedName(SERIALIZED_NAME_HAS_MORE_SALARY_INFO_NOTES)
  private String hasMoreSalaryInfoNotes;

  public static final String SERIALIZED_NAME_IS_OWED_OUTSTANDING_REIMBURSEMENTS = "is_owed_outstanding_reimbursements";
  @SerializedName(SERIALIZED_NAME_IS_OWED_OUTSTANDING_REIMBURSEMENTS)
  private Boolean isOwedOutstandingReimbursements;

  public static final String SERIALIZED_NAME_OWED_OUTSTANDING_REIMBURSEMENTS = "owed_outstanding_reimbursements";
  @SerializedName(SERIALIZED_NAME_OWED_OUTSTANDING_REIMBURSEMENTS)
  private ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements owedOutstandingReimbursements;

  public static final String SERIALIZED_NAME_PROPOSED_LAST_DATE = "proposed_last_date";
  @SerializedName(SERIALIZED_NAME_PROPOSED_LAST_DATE)
  private ResignationAfterStartDateRequestParamsProposedLastDate proposedLastDate;

  public static final String SERIALIZED_NAME_WILL_TAKE_MORE_PTO = "will_take_more_pto";
  @SerializedName(SERIALIZED_NAME_WILL_TAKE_MORE_PTO)
  private Boolean willTakeMorePto;

  public static final String SERIALIZED_NAME_WILL_TAKE_MORE_PTO_NOTES = "will_take_more_pto_notes";
  @SerializedName(SERIALIZED_NAME_WILL_TAKE_MORE_PTO_NOTES)
  private String willTakeMorePtoNotes;

  public ResignationAfterStartDateRequestParams() {
  }

  public ResignationAfterStartDateRequestParams acceptsProposedNotice(Boolean acceptsProposedNotice) {
    
    
    
    
    this.acceptsProposedNotice = acceptsProposedNotice;
    return this;
  }

   /**
   * Get acceptsProposedNotice
   * @return acceptsProposedNotice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")

  public Boolean getAcceptsProposedNotice() {
    return acceptsProposedNotice;
  }


  public void setAcceptsProposedNotice(Boolean acceptsProposedNotice) {
    
    
    
    this.acceptsProposedNotice = acceptsProposedNotice;
  }


  public ResignationAfterStartDateRequestParams agreesToPtoAmount(Boolean agreesToPtoAmount) {
    
    
    
    
    this.agreesToPtoAmount = agreesToPtoAmount;
    return this;
  }

   /**
   * Get agreesToPtoAmount
   * @return agreesToPtoAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")

  public Boolean getAgreesToPtoAmount() {
    return agreesToPtoAmount;
  }


  public void setAgreesToPtoAmount(Boolean agreesToPtoAmount) {
    
    
    
    this.agreesToPtoAmount = agreesToPtoAmount;
  }


  public ResignationAfterStartDateRequestParams agreesToPtoAmountNotes(String agreesToPtoAmountNotes) {
    
    
    
    
    this.agreesToPtoAmountNotes = agreesToPtoAmountNotes;
    return this;
  }

   /**
   * Required if &#x60;agrees_to_pto_amount&#x60; is set to false.
   * @return agreesToPtoAmountNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "I don't agree.", value = "Required if `agrees_to_pto_amount` is set to false.")

  public String getAgreesToPtoAmountNotes() {
    return agreesToPtoAmountNotes;
  }


  public void setAgreesToPtoAmountNotes(String agreesToPtoAmountNotes) {
    
    
    
    this.agreesToPtoAmountNotes = agreesToPtoAmountNotes;
  }


  public ResignationAfterStartDateRequestParams agreesToResignationReason(Boolean agreesToResignationReason) {
    
    
    
    
    this.agreesToResignationReason = agreesToResignationReason;
    return this;
  }

   /**
   * Get agreesToResignationReason
   * @return agreesToResignationReason
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "false", required = true, value = "")

  public Boolean getAgreesToResignationReason() {
    return agreesToResignationReason;
  }


  public void setAgreesToResignationReason(Boolean agreesToResignationReason) {
    
    
    
    this.agreesToResignationReason = agreesToResignationReason;
  }


  public ResignationAfterStartDateRequestParams agreesToResignationReasonNotes(String agreesToResignationReasonNotes) {
    
    
    
    
    this.agreesToResignationReasonNotes = agreesToResignationReasonNotes;
    return this;
  }

   /**
   * required if &#x60;agrees_to_resignation_reason&#x60; is set to false.
   * @return agreesToResignationReasonNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "I don't agree.", value = "required if `agrees_to_resignation_reason` is set to false.")

  public String getAgreesToResignationReasonNotes() {
    return agreesToResignationReasonNotes;
  }


  public void setAgreesToResignationReasonNotes(String agreesToResignationReasonNotes) {
    
    
    
    this.agreesToResignationReasonNotes = agreesToResignationReasonNotes;
  }


  public ResignationAfterStartDateRequestParams hasAdditionalInformation(Boolean hasAdditionalInformation) {
    
    
    
    
    this.hasAdditionalInformation = hasAdditionalInformation;
    return this;
  }

   /**
   * Get hasAdditionalInformation
   * @return hasAdditionalInformation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")

  public Boolean getHasAdditionalInformation() {
    return hasAdditionalInformation;
  }


  public void setHasAdditionalInformation(Boolean hasAdditionalInformation) {
    
    
    
    this.hasAdditionalInformation = hasAdditionalInformation;
  }


  public ResignationAfterStartDateRequestParams hasAdditionalInformationNotes(String hasAdditionalInformationNotes) {
    
    
    
    
    this.hasAdditionalInformationNotes = hasAdditionalInformationNotes;
    return this;
  }

   /**
   * required if &#x60;has_additional_information&#x60; is set to true.
   * @return hasAdditionalInformationNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Some extra info.", value = "required if `has_additional_information` is set to true.")

  public String getHasAdditionalInformationNotes() {
    return hasAdditionalInformationNotes;
  }


  public void setHasAdditionalInformationNotes(String hasAdditionalInformationNotes) {
    
    
    
    this.hasAdditionalInformationNotes = hasAdditionalInformationNotes;
  }


  public ResignationAfterStartDateRequestParams hasMoreSalaryInfo(Boolean hasMoreSalaryInfo) {
    
    
    
    
    this.hasMoreSalaryInfo = hasMoreSalaryInfo;
    return this;
  }

   /**
   * Get hasMoreSalaryInfo
   * @return hasMoreSalaryInfo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")

  public Boolean getHasMoreSalaryInfo() {
    return hasMoreSalaryInfo;
  }


  public void setHasMoreSalaryInfo(Boolean hasMoreSalaryInfo) {
    
    
    
    this.hasMoreSalaryInfo = hasMoreSalaryInfo;
  }


  public ResignationAfterStartDateRequestParams hasMoreSalaryInfoNotes(String hasMoreSalaryInfoNotes) {
    
    
    
    
    this.hasMoreSalaryInfoNotes = hasMoreSalaryInfoNotes;
    return this;
  }

   /**
   * required if &#x60;has_more_salary_info&#x60; is set to true.
   * @return hasMoreSalaryInfoNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Some info about the salary.", value = "required if `has_more_salary_info` is set to true.")

  public String getHasMoreSalaryInfoNotes() {
    return hasMoreSalaryInfoNotes;
  }


  public void setHasMoreSalaryInfoNotes(String hasMoreSalaryInfoNotes) {
    
    
    
    this.hasMoreSalaryInfoNotes = hasMoreSalaryInfoNotes;
  }


  public ResignationAfterStartDateRequestParams isOwedOutstandingReimbursements(Boolean isOwedOutstandingReimbursements) {
    
    
    
    
    this.isOwedOutstandingReimbursements = isOwedOutstandingReimbursements;
    return this;
  }

   /**
   * Get isOwedOutstandingReimbursements
   * @return isOwedOutstandingReimbursements
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")

  public Boolean getIsOwedOutstandingReimbursements() {
    return isOwedOutstandingReimbursements;
  }


  public void setIsOwedOutstandingReimbursements(Boolean isOwedOutstandingReimbursements) {
    
    
    
    this.isOwedOutstandingReimbursements = isOwedOutstandingReimbursements;
  }


  public ResignationAfterStartDateRequestParams owedOutstandingReimbursements(ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements owedOutstandingReimbursements) {
    
    
    
    
    this.owedOutstandingReimbursements = owedOutstandingReimbursements;
    return this;
  }

   /**
   * Get owedOutstandingReimbursements
   * @return owedOutstandingReimbursements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements getOwedOutstandingReimbursements() {
    return owedOutstandingReimbursements;
  }


  public void setOwedOutstandingReimbursements(ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements owedOutstandingReimbursements) {
    
    
    
    this.owedOutstandingReimbursements = owedOutstandingReimbursements;
  }


  public ResignationAfterStartDateRequestParams proposedLastDate(ResignationAfterStartDateRequestParamsProposedLastDate proposedLastDate) {
    
    
    
    
    this.proposedLastDate = proposedLastDate;
    return this;
  }

   /**
   * Get proposedLastDate
   * @return proposedLastDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResignationAfterStartDateRequestParamsProposedLastDate getProposedLastDate() {
    return proposedLastDate;
  }


  public void setProposedLastDate(ResignationAfterStartDateRequestParamsProposedLastDate proposedLastDate) {
    
    
    
    this.proposedLastDate = proposedLastDate;
  }


  public ResignationAfterStartDateRequestParams willTakeMorePto(Boolean willTakeMorePto) {
    
    
    
    
    this.willTakeMorePto = willTakeMorePto;
    return this;
  }

   /**
   * Get willTakeMorePto
   * @return willTakeMorePto
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "")

  public Boolean getWillTakeMorePto() {
    return willTakeMorePto;
  }


  public void setWillTakeMorePto(Boolean willTakeMorePto) {
    
    
    
    this.willTakeMorePto = willTakeMorePto;
  }


  public ResignationAfterStartDateRequestParams willTakeMorePtoNotes(String willTakeMorePtoNotes) {
    
    
    
    
    this.willTakeMorePtoNotes = willTakeMorePtoNotes;
    return this;
  }

   /**
   * required if &#x60;will_take_more_pto&#x60; is set to true.
   * @return willTakeMorePtoNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3 more days.", value = "required if `will_take_more_pto` is set to true.")

  public String getWillTakeMorePtoNotes() {
    return willTakeMorePtoNotes;
  }


  public void setWillTakeMorePtoNotes(String willTakeMorePtoNotes) {
    
    
    
    this.willTakeMorePtoNotes = willTakeMorePtoNotes;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ResignationAfterStartDateRequestParams instance itself
   */
  public ResignationAfterStartDateRequestParams putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResignationAfterStartDateRequestParams resignationAfterStartDateRequestParams = (ResignationAfterStartDateRequestParams) o;
    return Objects.equals(this.acceptsProposedNotice, resignationAfterStartDateRequestParams.acceptsProposedNotice) &&
        Objects.equals(this.agreesToPtoAmount, resignationAfterStartDateRequestParams.agreesToPtoAmount) &&
        Objects.equals(this.agreesToPtoAmountNotes, resignationAfterStartDateRequestParams.agreesToPtoAmountNotes) &&
        Objects.equals(this.agreesToResignationReason, resignationAfterStartDateRequestParams.agreesToResignationReason) &&
        Objects.equals(this.agreesToResignationReasonNotes, resignationAfterStartDateRequestParams.agreesToResignationReasonNotes) &&
        Objects.equals(this.hasAdditionalInformation, resignationAfterStartDateRequestParams.hasAdditionalInformation) &&
        Objects.equals(this.hasAdditionalInformationNotes, resignationAfterStartDateRequestParams.hasAdditionalInformationNotes) &&
        Objects.equals(this.hasMoreSalaryInfo, resignationAfterStartDateRequestParams.hasMoreSalaryInfo) &&
        Objects.equals(this.hasMoreSalaryInfoNotes, resignationAfterStartDateRequestParams.hasMoreSalaryInfoNotes) &&
        Objects.equals(this.isOwedOutstandingReimbursements, resignationAfterStartDateRequestParams.isOwedOutstandingReimbursements) &&
        Objects.equals(this.owedOutstandingReimbursements, resignationAfterStartDateRequestParams.owedOutstandingReimbursements) &&
        Objects.equals(this.proposedLastDate, resignationAfterStartDateRequestParams.proposedLastDate) &&
        Objects.equals(this.willTakeMorePto, resignationAfterStartDateRequestParams.willTakeMorePto) &&
        Objects.equals(this.willTakeMorePtoNotes, resignationAfterStartDateRequestParams.willTakeMorePtoNotes)&&
        Objects.equals(this.additionalProperties, resignationAfterStartDateRequestParams.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptsProposedNotice, agreesToPtoAmount, agreesToPtoAmountNotes, agreesToResignationReason, agreesToResignationReasonNotes, hasAdditionalInformation, hasAdditionalInformationNotes, hasMoreSalaryInfo, hasMoreSalaryInfoNotes, isOwedOutstandingReimbursements, owedOutstandingReimbursements, proposedLastDate, willTakeMorePto, willTakeMorePtoNotes, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResignationAfterStartDateRequestParams {\n");
    sb.append("    acceptsProposedNotice: ").append(toIndentedString(acceptsProposedNotice)).append("\n");
    sb.append("    agreesToPtoAmount: ").append(toIndentedString(agreesToPtoAmount)).append("\n");
    sb.append("    agreesToPtoAmountNotes: ").append(toIndentedString(agreesToPtoAmountNotes)).append("\n");
    sb.append("    agreesToResignationReason: ").append(toIndentedString(agreesToResignationReason)).append("\n");
    sb.append("    agreesToResignationReasonNotes: ").append(toIndentedString(agreesToResignationReasonNotes)).append("\n");
    sb.append("    hasAdditionalInformation: ").append(toIndentedString(hasAdditionalInformation)).append("\n");
    sb.append("    hasAdditionalInformationNotes: ").append(toIndentedString(hasAdditionalInformationNotes)).append("\n");
    sb.append("    hasMoreSalaryInfo: ").append(toIndentedString(hasMoreSalaryInfo)).append("\n");
    sb.append("    hasMoreSalaryInfoNotes: ").append(toIndentedString(hasMoreSalaryInfoNotes)).append("\n");
    sb.append("    isOwedOutstandingReimbursements: ").append(toIndentedString(isOwedOutstandingReimbursements)).append("\n");
    sb.append("    owedOutstandingReimbursements: ").append(toIndentedString(owedOutstandingReimbursements)).append("\n");
    sb.append("    proposedLastDate: ").append(toIndentedString(proposedLastDate)).append("\n");
    sb.append("    willTakeMorePto: ").append(toIndentedString(willTakeMorePto)).append("\n");
    sb.append("    willTakeMorePtoNotes: ").append(toIndentedString(willTakeMorePtoNotes)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accepts_proposed_notice");
    openapiFields.add("agrees_to_pto_amount");
    openapiFields.add("agrees_to_pto_amount_notes");
    openapiFields.add("agrees_to_resignation_reason");
    openapiFields.add("agrees_to_resignation_reason_notes");
    openapiFields.add("has_additional_information");
    openapiFields.add("has_additional_information_notes");
    openapiFields.add("has_more_salary_info");
    openapiFields.add("has_more_salary_info_notes");
    openapiFields.add("is_owed_outstanding_reimbursements");
    openapiFields.add("owed_outstanding_reimbursements");
    openapiFields.add("proposed_last_date");
    openapiFields.add("will_take_more_pto");
    openapiFields.add("will_take_more_pto_notes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accepts_proposed_notice");
    openapiRequiredFields.add("agrees_to_pto_amount");
    openapiRequiredFields.add("agrees_to_resignation_reason");
    openapiRequiredFields.add("has_additional_information");
    openapiRequiredFields.add("has_more_salary_info");
    openapiRequiredFields.add("is_owed_outstanding_reimbursements");
    openapiRequiredFields.add("will_take_more_pto");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ResignationAfterStartDateRequestParams
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ResignationAfterStartDateRequestParams.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResignationAfterStartDateRequestParams is not found in the empty JSON string", ResignationAfterStartDateRequestParams.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResignationAfterStartDateRequestParams.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("agrees_to_pto_amount_notes") != null && !jsonObj.get("agrees_to_pto_amount_notes").isJsonNull()) && !jsonObj.get("agrees_to_pto_amount_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agrees_to_pto_amount_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agrees_to_pto_amount_notes").toString()));
      }
      if ((jsonObj.get("agrees_to_resignation_reason_notes") != null && !jsonObj.get("agrees_to_resignation_reason_notes").isJsonNull()) && !jsonObj.get("agrees_to_resignation_reason_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agrees_to_resignation_reason_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agrees_to_resignation_reason_notes").toString()));
      }
      if ((jsonObj.get("has_additional_information_notes") != null && !jsonObj.get("has_additional_information_notes").isJsonNull()) && !jsonObj.get("has_additional_information_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `has_additional_information_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("has_additional_information_notes").toString()));
      }
      if ((jsonObj.get("has_more_salary_info_notes") != null && !jsonObj.get("has_more_salary_info_notes").isJsonNull()) && !jsonObj.get("has_more_salary_info_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `has_more_salary_info_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("has_more_salary_info_notes").toString()));
      }
      // validate the optional field `owed_outstanding_reimbursements`
      if (jsonObj.get("owed_outstanding_reimbursements") != null && !jsonObj.get("owed_outstanding_reimbursements").isJsonNull()) {
        ResignationAfterStartDateRequestParamsOwedOutstandingReimbursements.validateJsonObject(jsonObj.getAsJsonObject("owed_outstanding_reimbursements"));
      }
      // validate the optional field `proposed_last_date`
      if (jsonObj.get("proposed_last_date") != null && !jsonObj.get("proposed_last_date").isJsonNull()) {
        ResignationAfterStartDateRequestParamsProposedLastDate.validateJsonObject(jsonObj.getAsJsonObject("proposed_last_date"));
      }
      if ((jsonObj.get("will_take_more_pto_notes") != null && !jsonObj.get("will_take_more_pto_notes").isJsonNull()) && !jsonObj.get("will_take_more_pto_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `will_take_more_pto_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("will_take_more_pto_notes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResignationAfterStartDateRequestParams.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResignationAfterStartDateRequestParams' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResignationAfterStartDateRequestParams> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResignationAfterStartDateRequestParams.class));

       return (TypeAdapter<T>) new TypeAdapter<ResignationAfterStartDateRequestParams>() {
           @Override
           public void write(JsonWriter out, ResignationAfterStartDateRequestParams value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ResignationAfterStartDateRequestParams read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ResignationAfterStartDateRequestParams instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ResignationAfterStartDateRequestParams given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ResignationAfterStartDateRequestParams
  * @throws IOException if the JSON string is invalid with respect to ResignationAfterStartDateRequestParams
  */
  public static ResignationAfterStartDateRequestParams fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResignationAfterStartDateRequestParams.class);
  }

 /**
  * Convert an instance of ResignationAfterStartDateRequestParams to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

